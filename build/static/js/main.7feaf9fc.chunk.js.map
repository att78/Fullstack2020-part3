{"version":3,"sources":["components/ContactForm.js","components/Person.js","components/ContactList.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["ContactForm","props","onSubmit","addNewContact","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","name","number","onClick","handleErase","person","ContactList","persons","list","map","key","Filter","filter","handleFilterChange","baseUrl","axios","get","newObject","post","put","id","then","response","data","delete","Notification","message","nstyle","color","fontStyle","fontSize","style","className","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","useEffect","personService","shownContacts","toLowerCase","includes","eraseContact","updatedContacts","contact","setTimeout","event","target","preventDefault","every","concat","window","confirm","console","log","updatedContact","find","a","returnedContact","contactName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7feaf9fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ContactForm = (props) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.addNewContact}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n            </div>\r\n\r\n            <div>\r\n                <p></p>\r\n                <button type=\"submit\">Add to the Phonebook</button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ContactForm \r\n","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <li>\r\n            {props.name} {props.number}\r\n            <button onClick={() => props.handleErase(props.person)}>\r\n                Erase\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from '../components/Person'\r\n\r\nconst ContactList = ({ persons, handleErase }) => {\r\n\r\n    const list = persons\r\n\r\n    const contacts = () => list.map(person => <Person key={person.name} name={person.name} person={person} number={person.number} handleErase={handleErase} />)\r\n\r\n    return (\r\n        <div>\r\n            {contacts()}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ContactList","import React from 'react'\r\n\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            Filter phonebook with: <input value={props.filter} onChange={props.handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (newObject) => {\r\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst erase = (id) => {\r\n\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    erase: erase\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    const nstyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n\r\n    if (message === null) {\r\n        return (\r\n            <div style={nstyle}\r\n            ></div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\" style={nstyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\n//import axios from 'axios'\r\nimport ContactForm from './components/ContactForm'\r\nimport ContactList from './components/ContactList'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n    const addNewContact = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (persons.every(person => person.name !== newName)) {\r\n            const PersonObject = {\r\n                name: newName,\r\n                number: newNumber,\r\n            }\r\n\r\n            personService\r\n                .create(PersonObject)\r\n\r\n                .then(response => {\r\n                    setPersons(persons.concat(response.data))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setNotificationMessage(`A new contact was added to phonebook.`)\r\n                    setTimeout(() => { setNotificationMessage(null) }, 5000)\r\n                })\r\n\r\n        } else {\r\n            if (window.confirm(`${newName} is already added to phonebook, would you like to change the number`)) {\r\n                console.log('Change number')\r\n                const updatedContact = persons.find(a => a.name === newName)\r\n                updatedContact.number = newNumber\r\n                personService.update(updatedContact)\r\n                    .then(returnedContact => {\r\n                        setPersons(persons\r\n                            .map(person => person.id !== updatedContact.id ? person : returnedContact))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        setNotificationMessage(`${returnedContact.name} has been changed`)\r\n                        setTimeout(() => { setNotificationMessage(null) }, 5000)\r\n                    })\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(response => { setPersons(response.data) })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const shownContacts = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const handleErase = (person) => {\r\n        const contactName = person.name\r\n        if (window.confirm(`Should ${contactName} be erased from the phonebook?`)) {\r\n            eraseContact(person)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const eraseContact = (person) => {\r\n        personService.erase(person.id)\r\n            .then(response => {\r\n                const updatedContacts = persons.filter(contact => contact.id !== person.id)\r\n                setPersons(updatedContacts)\r\n                setNotificationMessage(`Contact was removed successfully.`)\r\n                setTimeout(() => { setNotificationMessage(null) }, 5000)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage} />\r\n\r\n            <Filter newFilter={newFilter}\r\n                handleFilterChange={handleFilterChange} />\r\n\r\n\r\n\r\n            <h3>Add new contact:</h3>\r\n            <ContactForm addNewContact={addNewContact}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n\r\n            <h2>Numbers</h2>\r\n            <ContactList persons={shownContacts} handleErase={handleErase} />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}